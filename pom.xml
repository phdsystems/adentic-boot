<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0          http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>dev.adeengineer</groupId>
  <artifactId>adentic-boot</artifactId>
  <version>0.2.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>AgenticBoot - Spring Boot Replacement</name>
  <description>Lightweight, Spring-free application framework with DI, HTTP server, and event system</description>

  <properties>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Dependency versions -->
    <javalin.version>6.1.3</javalin.version>
    <jackson.version>2.17.2</jackson.version>
    <slf4j.version>2.0.13</slf4j.version>
    <logback.version>1.5.6</logback.version>
    <lombok.version>1.18.34</lombok.version>
    <junit.version>5.10.1</junit.version>
    <assertj.version>3.25.3</assertj.version>
    <h2.version>2.2.224</h2.version>

    <!-- Plugin versions -->
    <dependency-check-maven.version>9.0.9</dependency-check-maven.version>
  </properties>

  <dependencies>
    <!-- Adentic API - Annotations (for annotation scanning) -->
    <dependency>
      <groupId>dev.adeengineer</groupId>
      <artifactId>adentic-api-annotation</artifactId>
      <version>0.2.0-SNAPSHOT</version>
    </dependency>

    <!-- Adentic Core - Implementations (optional at runtime) -->
    <dependency>
      <groupId>dev.adeengineer</groupId>
      <artifactId>adentic-core</artifactId>
      <version>0.2.0-SNAPSHOT</version>
      <scope>runtime</scope>
      <optional>true</optional>
    </dependency>

    <!-- Javalin - Lightweight HTTP server -->
    <dependency>
      <groupId>io.javalin</groupId>
      <artifactId>javalin</artifactId>
      <version>${javalin.version}</version>
    </dependency>

    <!-- Jackson - JSON serialization -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.datatype</groupId>
      <artifactId>jackson-datatype-jsr310</artifactId>
      <version>${jackson.version}</version>
    </dependency>

    <!-- SLF4J + Logback - Logging -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logback.version}</version>
    </dependency>

    <!-- Lombok - Code generation -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>provided</scope>
    </dependency>

    <!-- Project Reactor - Reactive streams for async operations -->
    <dependency>
      <groupId>io.projectreactor</groupId>
      <artifactId>reactor-core</artifactId>
      <version>3.6.1</version>
    </dependency>

    <!-- H2 Database - In-memory SQL database for testing and development -->
    <dependency>
      <groupId>com.h2database</groupId>
      <artifactId>h2</artifactId>
      <version>${h2.version}</version>
    </dependency>

    <!-- Testing -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <!-- Maven Compiler Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.0</version>
        <configuration>
          <release>21</release>
          <compilerArgs>
            <arg>-Werror</arg>
            <arg>-Xlint:all</arg>
            <arg>-Xlint:-processing</arg>
          </compilerArgs>
          <showWarnings>true</showWarnings>
          <failOnWarning>true</failOnWarning>
          <annotationProcessorPaths>
            <path>
              <groupId>org.projectlombok</groupId>
              <artifactId>lombok</artifactId>
              <version>${lombok.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>

      <!-- Maven Surefire Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.1</version>
      </plugin>

      <!-- Checkstyle Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.6.0</version>
        <configuration>
          <configLocation>checkstyle.xml</configLocation>
          <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
          <suppressionsFileExpression>checkstyle.suppressions.file</suppressionsFileExpression>
          <encoding>UTF-8</encoding>
          <consoleOutput>true</consoleOutput>
          <failsOnError>true</failsOnError>
          <linkXRef>false</linkXRef>
          <propertyExpansion>config_loc=${project.basedir}</propertyExpansion>
        </configuration>
        <executions>
          <execution>
            <id>validate</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <!-- PMD Plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>3.25.0</version>
        <configuration>
          <failOnViolation>false</failOnViolation>
          <printFailingErrors>true</printFailingErrors>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-core</artifactId>
            <version>7.7.0</version>
          </dependency>
          <dependency>
            <groupId>net.sourceforge.pmd</groupId>
            <artifactId>pmd-java</artifactId>
            <version>7.7.0</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>validate</id>
            <goals>
              <goal>check</goal>
              <goal>cpd-check</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>

      <!-- SpotBugs Plugin -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>4.8.3.0</version>
        <configuration>
          <excludeFilterFile>spotbugs-exclude.xml</excludeFilterFile>
        </configuration>
        <executions>
          <execution>
            <id>spotbugs</id>
            <goals>
              <goal>check</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>

      <!-- OWASP Dependency-Check Plugin -->
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>${dependency-check-maven.version}</version>
        <configuration>
          <!-- Fail build on CVSS >= 8 (High severity) -->
          <failBuildOnCVSS>8</failBuildOnCVSS>
          <!-- Generate all report formats (HTML, JSON, XML, CSV) -->
          <formats>
            <format>HTML</format>
            <format>JSON</format>
          </formats>
          <!-- Report output directory -->
          <outputDirectory>${project.build.directory}/dependency-check</outputDirectory>
          <!-- Suppression file for false positives -->
          <suppressionFile>${project.basedir}/dependency-check-suppressions.xml</suppressionFile>
          <!-- Enable experimental analyzers -->
          <nodeAnalyzerEnabled>false</nodeAnalyzerEnabled>
          <retireJsAnalyzerEnabled>false</retireJsAnalyzerEnabled>
          <!-- NVD API key (optional, speeds up downloads) -->
          <!-- <nvdApiKey>${env.NVD_API_KEY}</nvdApiKey> -->
          <!-- Don't fail on update errors (NVD API rate limiting) -->
          <failOnError>false</failOnError>
          <!-- Skip NVD update if you don't have API key (use cached data) -->
          <!-- <nvdDatafeedEnabled>false</nvdDatafeedEnabled> -->
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <!-- Spotless Plugin -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.43.0</version>
        <configuration>
          <java>
            <googleJavaFormat>
              <version>1.19.2</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
            <removeUnusedImports/>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </java>
          <pom>
            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
            </sortPom>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </pom>
          <markdown>
            <includes>
              <include>**/*.md</include>
            </includes>
            <flexmark/>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </markdown>
          <json>
            <includes>
              <include>**/*.json</include>
            </includes>
            <excludes>
              <exclude>**/node_modules/**</exclude>
              <exclude>**/target/**</exclude>
            </excludes>
            <gson>
              <indentSpaces>2</indentSpaces>
              <sortByKeys>true</sortByKeys>
            </gson>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </json>
          <yaml>
            <includes>
              <include>**/*.yml</include>
              <include>**/*.yaml</include>
            </includes>
            <excludes>
              <exclude>**/target/**</exclude>
            </excludes>
            <jackson/>
            <trimTrailingWhitespace/>
            <endWithNewline/>
          </yaml>
        </configuration>
        <executions>
          <execution>
            <id>spotless-apply</id>
            <goals>
              <goal>apply</goal>
            </goals>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
